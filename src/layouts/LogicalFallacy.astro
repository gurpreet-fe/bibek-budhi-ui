---
import BaseHead from "@/components/BaseHead.astro";
import Footer from "@/components/Footer.astro";
import Header from "@/components/Header.astro";
import type { CollectionEntry } from "astro:content";
import { getCollection } from "astro:content";

const fallacies = await getCollection("fallacy");

type Props = CollectionEntry<"fallacy">["data"];

const { title, description } = Astro.props;
---

<html lang="en">
  <head>
    <BaseHead title={title} description="" />
    <style>
      @import url("/node_modules/hamburgers/dist/hamburgers.min.css");

      aside {
        @media (max-width: 1019px) {
          position: absolute;
          top: 65px;
          bottom: 0;
          left: 0;
          background-color: white;
          transform: translateX(-100%);
          will-change: transform;
          transition: transform 0.2s ease;

          &.mobile-active {
            transform: translateX(0);

            &::after {
              /* content: ""; */
              display: block;
              position: absolute;
              background-color: pink;
              top: 0;
              bottom: 0;
              left: 100%;
              width: calc(100vw - 100%);
            }
          }
        }

        padding: 10px;
        border-right: 1px solid #e1e1e1;
        /* display: none; */

        @media (min-width: 1020px) {
          flex: 0 0 auto;
          overflow: auto;
          display: block;
        }
      }

      li + li {
        margin-top: 10px;
      }

      article {
        padding: 16px;
      }

      .mobile-bar {
        padding: 20px;
        line-height: 0;

        @media (min-width:1020px) {
          display: none;
        }
      }

      .hamburger {
        padding: 0;
        line-height: 0;

        .hamburger-box {
          width: 24px;
          height: 20px;
        }

        .hamburger-inner {
          width: 24px;

          &::before,
          &::after {
            width: 24px;
          }
        }

        &:not(.is-active) {
          .hamburger-inner {
            &::before {
              top: 8px;
            }
            &::after {
              top: 16px;
            }
          }
        }
      }
    </style>
  </head>
  <body>
    <Header />

    <main>
      <div class="mobile-bar">
        <button
          class="hamburger hamburger--slider"
          id="hamburger"
          type="button">
          <span class="hamburger-box">
            <span class="hamburger-inner"></span>
          </span>
        </button>
      </div>

      <h1 class="title text-center my-20">{title}</h1>

      <section class="my-20">
        <div class="container px-4 mx-auto">
          <div class="flex">
            <aside>
              <ul>
                {
                  fallacies.map((fallacy) => (
                    <li>
                      <a
                        class={`${fallacy.data.title === title ? "" : "text-gray-400"}`}
                        href={`/fallacies/${fallacy.id}`}>
                        {fallacy.data.title}
                      </a>
                    </li>
                  ))
                }
              </ul>
            </aside>

            <article class="md">
              <slot />
            </article>
          </div>
        </div>
      </section>
    </main>

    <Footer />

    <script>
      document.addEventListener("DOMContentLoaded", () => {
        const hamburger = document.getElementById("hamburger");
        if (!hamburger) {
          console.error("Hamburger element does not exist");
        }

        const aside = document.querySelector("aside");
        if (!aside) {
          console.log("Aside element does not exist");
        }

        hamburger?.addEventListener("click", (ev: any) => {
          ev.stopPropagation();

          hamburger.classList.add("is-active");
          aside?.classList.add("mobile-active");

          const handleClick = (ev: any) => {
            if (ev.target !== aside) {
              hamburger?.classList.remove("is-active");
              aside?.classList.remove("mobile-active");

              document.removeEventListener("click", handleClick);
            }
          };

          document.addEventListener("click", handleClick);
        });
      });
    </script>
  </body>
</html>
